using System;
using System.IO;
using System.Net;
using System.Text;
using Newtonsoft.Json;
using System.Text.RegularExpressions;
using System.Collections.Generic;

public class CPHInline
{
    public bool Execute()
    {
    	string voiceAlias = "Generic";
        string apiKey = args["chatGPT3APIkey"].ToString();
        // create a ChatGPTAPI instance with your API key
        ChatGPTAPI chatGPT = new ChatGPTAPI(apiKey);
        // get the message input from the arguments
        string messageInput = args["rawInput"].ToString();
        string user = args["user"].ToString();
        // generate a response with the ChatGPTAPI
        string response = chatGPT.GenerateResponse(messageInput);
        // send the response to the chat
        Root root = JsonConvert.DeserializeObject<Root>(response);
        string myString = root.choices[0].text;
        CPH.LogInfo("GPT myString " + myString);
        string myStringCleaned0 = myString.Replace(System.Environment.NewLine, " ");
        string mystringCleaned1 = Regex.Replace(myStringCleaned0, @"\r\n?|\n", " ");
		string myStringCleaned2 = Regex.Replace(mystringCleaned1, @"[\r\n]+", " ");
        string unescapedString = Regex.Unescape(myStringCleaned2);
        string finalGPT = unescapedString.Trim();
 

        CPH.SendMessage(finalGPT);
        CPH.TtsSpeak(voiceAlias, finalGPT, true);
        CPH.LogInfo("GPT " + finalGPT);
        CPH.LogDebug(response);
        return true;
    }
}
class ChatGPTAPI
{
    private string _apiKey;
    private string _endpoint = "https://api.openai.com/v1/engines/text-davinci-003/completions";
    public ChatGPTAPI(string apiKey)
    {
        _apiKey = apiKey;
    }
    public string GenerateResponse(string prompt)
    {
        // Create a request to the ChatGPT API
        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(_endpoint);
        request.Headers.Add("Authorization", "Bearer " + _apiKey);
        request.ContentType = "application/json";
        request.Method = "POST";
        // Build the request body
        string requestBody = "{\"prompt\":\"" + prompt + "\",\"max_tokens\": 100,\"temperature\": 0.7}";
        byte[] bytes = Encoding.UTF8.GetBytes(requestBody);
        request.ContentLength = bytes.Length;
        using (Stream requestStream = request.GetRequestStream())
        {
            requestStream.Write(bytes, 0, bytes.Length);
        }
        // Get the response from the ChatGPT API
        HttpWebResponse response = (HttpWebResponse)request.GetResponse();
        string responseBody;
        using (Stream responseStream = response.GetResponseStream())
        {
            StreamReader reader = new StreamReader(responseStream, Encoding.UTF8);
            responseBody = reader.ReadToEnd();
        }
        return responseBody;
    }
}
    public class Choice    {
        public string text { get; set; }
        public int index { get; set; }
        public object logprobs { get; set; }
        public string finish_reason { get; set; }    }
    public class Root    {
        public string id { get; set; }
        public string @object { get; set; }
        public int created { get; set; }
        public string model { get; set; }
        public List<Choice> choices { get; set; }
        public Usage usage { get; set; }    }
    public class Usage    {
        public int prompt_tokens { get; set; }
        public int completion_tokens { get; set; }
        public int total_tokens { get; set; }    }